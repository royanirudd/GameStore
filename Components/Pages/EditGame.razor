@page "/editgame"
@page "/editgame/{id:int}"

@inject GenresClient GenresClient
@inject GamesClient GamesClient
@inject NavigationManager NavigationManager


<PageTitle>@title</PageTitle>
<h3>@title</h3>



@if (genres is null || game is null)
{
	<p><em>Loading...</em></p>
} 
else
{
<div class="row">
<div class="col-md-4">
<EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
<DataAnnotationsValidator />
<div class="mb-3">
  <div class="form-group">
    <label for="name" class="form-label">Name:</label>
    <InputText class="form-control" @bind-Value="game.Name" id="name"  />
    <ValidationMessage For="() => game.Name" />
    </div>
  </div>
  <div class="mb-3">
  <div class="form-group">
    <label for="genre" class="form-label">Genre:</label>
    <InputSelect class="form-select" @bind-Value="game.GenreId" id="genre" >
    <ValidationMessage For="() => game.GenreId" />
    <option value="">Select a genre</option>
	@foreach (var genre in genres)
	{
		<option value="@genre.Id">@genre.Name</option>
	}
    </InputSelect>
    </div>
  </div>
<div class="mb-3">
  <div class="form-group">
    <label for="price" class="form-label">Price:</label>
    <InputNumber class="form-control" @bind-Value="game.Price" id="price"  />
    <ValidationMessage For="() => game.Price" />
    </div>
  </div>
<div class="mb-3">
  <div class="form-group">
    <label for="releaseDate" class="form-label">Release Date:</label>
    <InputDate class="form-control" @bind-Value="game.ReleaseDate" id="releaseDate"  />
    </div>
  </div>
  <button type="submit" class="btn btn-primary">Confirm</button>
  <a role="button" class="btn btn-secondary" href="/">Cancel</a>
</EditForm>
</div>
</div>
}

@code {

	//initially null, we need to specify it is a parameter
	[Parameter]
	public int? Id {get; set;}

	[SupplyParameterFromForm]
	private GameDetails? game {get; set;}

	private Genre[]? genres;

	private string title = string.Empty;


	protected override void OnInitialized()
	{
		genres = GenresClient.GetGenres();
	}

	private void HandleSubmit()
	{
		ArgumentNullException.ThrowIfNull(game);
		if ( Id is null)
		{
			GamesClient.AddGame(game);
		}
		else
		{
			game.Id = Id.Value;
			GamesClient.UpdateGame(game);
		}
		NavigationManager.NavigateTo("/");
	}

	protected override void OnParametersSet()
	{
		if (game is not null)
		{
			return;
		}
		//this would work dependin if the route has id or not
		if (Id is not null)
		{
			game = GamesClient.GetGame(Id.Value);
			title = $"Edit {game.Name}";
		} else
		{
			//Here we construct the empty fields so copy the old logic here
			game = new()
			{
				Name = string.Empty,
				ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
			};

			title = "New Game";
		}
	}
}
